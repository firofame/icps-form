{"version":3,"sources":["App/index.js","serviceWorker.js","index.js"],"names":["tableColumns","Header","accessor","Boolean","window","location","hostname","match","ReactDOM","render","useState","JSON","parse","localStorage","getItem","tableData","setTableData","categoryNo","setCategoryNo","applicationFor","setApplicationFor","isScps","setIsScps","isSara","setIsSara","dcpu","setDcpu","jjb","setJjb","ch","setCh","name","setName","gender","setGender","dob","setDob","age","setAge","father","setFather","residence","setResidence","phone","setPhone","mobile","setMobile","email","setEmail","address","setAddress","experience","setexperience","course","institution","regNo","yearOfPass","marks","remarks","qualificationsData","setqualificationsData","EditableCell","cellInfo","row","id","column","initialValue","cell","value","setValue","onChange","e","target","onBlur","map","item","index","columns","Cell","Table","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","getHeaderProps","i","getRowProps","cells","getCellProps","className","type","checked","toUpperCase","dateString","today","Date","birthDate","getFullYear","m","getMonth","getDate","getAge","onClick","tempData","setItem","stringify","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e50562a2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useTable } from \"react-table\";\n\nimport \"./index.css\";\n\nfunction getAge(dateString) {\n  var today = new Date();\n  var birthDate = new Date(dateString);\n  var age = today.getFullYear() - birthDate.getFullYear();\n  var m = today.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n}\n\nconst tableColumns = [\n  { Header: \"Category No\", accessor: \"categoryNo\" },\n  { Header: \"Application for\", accessor: \"applicationFor\" },\n  { Header: \"SCPS\", accessor: \"isScps\" },\n  { Header: \"SARA\", accessor: \"isSara\" },\n  { Header: \"DCPU\", accessor: \"dcpu\" },\n  { Header: \"JJ B/CWC\", accessor: \"jjb\" },\n  { Header: \"CH/OH/POS\", accessor: \"ch\" },\n  { Header: \"Name\", accessor: \"name\" },\n  { Header: \"Gender\", accessor: \"gender\" },\n  { Header: \"D.O.B\", accessor: \"dob\" },\n  { Header: \"Age\", accessor: \"age\" },\n  { Header: \"Father's Name\", accessor: \"father\" },\n  { Header: \"Phone\", accessor: \"phone\" },\n  { Header: \"Mobile\", accessor: \"mobile\" },\n  { Header: \"Email\", accessor: \"email\" },\n  { Header: \"Address\", accessor: \"address\" },\n  { Header: \"Experience\", accessor: \"experience\" }\n];\n\nexport default function App() {\n  const [tableData, setTableData] = useState(\n    JSON.parse(localStorage.getItem(\"tableData\"))\n      ? JSON.parse(localStorage.getItem(\"tableData\"))\n      : []\n  );\n  const [categoryNo, setCategoryNo] = useState(\"\");\n  const [applicationFor, setApplicationFor] = useState(\"\");\n  const [isScps, setIsScps] = useState(false);\n  const [isSara, setIsSara] = useState(false);\n  const [dcpu, setDcpu] = useState(\"Alappuzha\");\n  const [jjb, setJjb] = useState(\"Alappuzha\");\n  const [ch, setCh] = useState(\"Alappuzha\");\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"Male\");\n  const [dob, setDob] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [father, setFather] = useState(\"\");\n  const [residence, setResidence] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [experience, setexperience] = useState(\"\");\n  const [qualificationsData, setqualificationsData] = useState([\n    {\n      course: \"S.S.L.C\",\n      institution: \"\",\n      regNo: \"\",\n      yearOfPass: \"\",\n      marks: \"\",\n      remarks: \"\"\n    },\n    {\n      course: \"Pre-Degree/+2\",\n      institution: \"\",\n      regNo: \"\",\n      yearOfPass: \"\",\n      marks: \"\",\n      remarks: \"\"\n    }\n  ]);\n\n  const EditableCell = cellInfo => {\n    const {\n      row,\n      column: { id },\n      cell: { value: initialValue }\n    } = cellInfo;\n    const [value, setValue] = useState(initialValue);\n    const onChange = e => {\n      setValue(e.target.value);\n    };\n    const onBlur = () => {\n      setqualificationsData(\n        qualificationsData.map((item, index) => {\n          if (row.index === index) {\n            return { ...item, [id]: value };\n          }\n          return item;\n        })\n      );\n    };\n    return <input value={value} onChange={onChange} onBlur={onBlur} />;\n  };\n\n  const columns = [\n    {\n      Header: \"Course\",\n      accessor: \"course\",\n      Cell: EditableCell\n    },\n    {\n      Header: \"Institution/University\",\n      accessor: \"institution\",\n      Cell: EditableCell\n    },\n    {\n      Header: \"Reg.No\",\n      accessor: \"regNo\",\n      Cell: EditableCell\n    },\n    {\n      Header: \"Year Of Pass\",\n      accessor: \"yearOfPass\",\n      Cell: EditableCell\n    },\n    {\n      Header: \"% of Mark/Grade\",\n      accessor: \"marks\",\n      Cell: EditableCell\n    },\n    {\n      Header: \"Remarks\",\n      accessor: \"remarks\",\n      Cell: EditableCell\n    }\n  ];\n\n  function Table({ columns, data }) {\n    // Use the state and functions returned from useTable to build your UI\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns,\n      data\n    });\n\n    // Render the UI for your table\n    return (\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n\n  return (\n    <div className=\"container mt-5 bg-light\">\n      Category No:\n      <input\n        className=\"ml-2\"\n        value={categoryNo}\n        onChange={e => setCategoryNo(e.target.value)}\n      />\n      <h4 className=\"text-center mt-3\">\n        Women And Child Development Department Integrated Child Protection\n        Scheme [ICPS]\n      </h4>\n      <div className=\"mt-4\">\n        Application for the Post of:\n        <input\n          className=\"ml-2 w-50\"\n          value={applicationFor}\n          onChange={e => setApplicationFor(e.target.value)}\n        />\n      </div>\n      <div className=\"row mt-3 d-flex align-items-center\">\n        <input\n          className=\"mr-1\"\n          type=\"checkbox\"\n          checked={isScps}\n          onChange={e => setIsScps(e.target.checked)}\n        />\n        SCPS\n        <input\n          className=\"mr-1 ml-3\"\n          type=\"checkbox\"\n          checked={isSara}\n          onChange={e => setIsSara(e.target.checked)}\n        />\n        SARA\n        <div className=\"col text-center\">\n          DCPU (Specify Dist)\n          <select\n            value={dcpu}\n            onChange={e => setDcpu(e.target.value)}\n            className=\"ml-2\"\n          >\n            <option value=\"Alappuzha\">Alappuzha</option>\n            <option value=\"Ernakulam\">Ernakulam</option>\n            <option value=\"Idukki\">Idukki</option>\n            <option value=\"Kannur\">Kannur</option>\n            <option value=\"Kasaragod\">Kasaragod</option>\n            <option value=\"Kollam\">Kollam</option>\n            <option value=\"Kottayam\">Kottayam</option>\n            <option value=\"Kozhikode\">Kozhikode</option>\n            <option value=\"Malappuram\">Malappuram</option>\n            <option value=\"Palakkad\">Palakkad</option>\n            <option value=\"Pathanamthitta\">Pathanamthitta</option>\n            <option value=\"Thiruvananthapuram\">Thiruvananthapuram</option>\n            <option value=\"Thrissur\">Thrissur</option>\n            <option value=\"Wayanad\">Wayanad</option>\n          </select>\n        </div>\n        <div className=\"col text-center\">\n          JJ B/CWC (Specify Dist)\n          <select\n            value={jjb}\n            onChange={e => setJjb(e.target.value)}\n            className=\"ml-2\"\n          >\n            <option value=\"Alappuzha\">Alappuzha</option>\n            <option value=\"Ernakulam\">Ernakulam</option>\n            <option value=\"Idukki\">Idukki</option>\n            <option value=\"Kannur\">Kannur</option>\n            <option value=\"Kasaragod\">Kasaragod</option>\n            <option value=\"Kollam\">Kollam</option>\n            <option value=\"Kottayam\">Kottayam</option>\n            <option value=\"Kozhikode\">Kozhikode</option>\n            <option value=\"Malappuram\">Malappuram</option>\n            <option value=\"Palakkad\">Palakkad</option>\n            <option value=\"Pathanamthitta\">Pathanamthitta</option>\n            <option value=\"Thiruvananthapuram\">Thiruvananthapuram</option>\n            <option value=\"Thrissur\">Thrissur</option>\n            <option value=\"Wayanad\">Wayanad</option>\n          </select>\n        </div>\n        <div className=\"col text-center\">\n          CH/OH/POS (Specify Dist)\n          <select\n            value={ch}\n            onChange={e => setCh(e.target.value)}\n            className=\"ml-2\"\n          >\n            <option value=\"Alappuzha\">Alappuzha</option>\n            <option value=\"Ernakulam\">Ernakulam</option>\n            <option value=\"Idukki\">Idukki</option>\n            <option value=\"Kannur\">Kannur</option>\n            <option value=\"Kasaragod\">Kasaragod</option>\n            <option value=\"Kollam\">Kollam</option>\n            <option value=\"Kottayam\">Kottayam</option>\n            <option value=\"Kozhikode\">Kozhikode</option>\n            <option value=\"Malappuram\">Malappuram</option>\n            <option value=\"Palakkad\">Palakkad</option>\n            <option value=\"Pathanamthitta\">Pathanamthitta</option>\n            <option value=\"Thiruvananthapuram\">Thiruvananthapuram</option>\n            <option value=\"Thrissur\">Thrissur</option>\n            <option value=\"Wayanad\">Wayanad</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"mt-4\">\n        1. Name (Use Capital Letters Only):\n        <input\n          className=\"ml-2 w-50\"\n          value={name}\n          onChange={e => setName(e.target.value.toUpperCase())}\n        />\n      </div>\n      <div className=\"mt-4\">\n        2. Male/Female/TG (Specify):\n        <select\n          value={gender}\n          onChange={e => setGender(e.target.value)}\n          className=\"ml-2\"\n        >\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n          <option value=\"TG\">TG</option>\n        </select>\n      </div>\n      <div className=\"mt-4\">\n        3. Age & Date of Birth:\n        <input\n          type=\"date\"\n          className=\"mx-2\"\n          value={dob}\n          onChange={e => {\n            setDob(e.target.value);\n            setAge(getAge(e.target.value));\n          }}\n        />\n        {`Age: ${age}`}\n      </div>\n      <div className=\"mt-4\">\n        4. Father's/Husband's Name:\n        <input\n          className=\"ml-2 w-50\"\n          value={father}\n          onChange={e => setFather(e.target.value.toUpperCase())}\n        />\n      </div>\n      <div className=\"mt-4 d-flex align-items-center\">\n        5. Place of Residence (Proof to be attached):\n        <textarea\n          rows=\"3\"\n          className=\"ml-2 w-50\"\n          value={residence}\n          onChange={e => setResidence(e.target.value)}\n        />\n      </div>\n      <div className=\"mt-4 d-flex align-items-center\">\n        6. Phone / Mobile No: 1.\n        <input\n          type=\"tel\"\n          className=\"ml-2 mr-5\"\n          value={phone}\n          onChange={e => setPhone(e.target.value)}\n        />\n        2.\n        <input\n          type=\"tel\"\n          className=\"ml-2\"\n          value={mobile}\n          onChange={e => setMobile(e.target.value)}\n        />\n      </div>\n      <div className=\"mt-4\">\n        7. e-mail Address:\n        <input\n          type=\"email\"\n          className=\"ml-2 w-50\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n      </div>\n      <div className=\"mt-4 d-flex align-items-center\">\n        8. Permanent Address (With Pin code):\n        <textarea\n          rows=\"3\"\n          className=\"ml-2 w-50\"\n          value={address}\n          onChange={e => setAddress(e.target.value)}\n        />\n      </div>\n      <div className=\"mt-4\">\n        9. Qualification (Use Additional Sheets if needed):\n        <Table columns={columns} data={qualificationsData} />\n      </div>\n      <div className=\"my-4\">\n        10. Experience:\n        <input\n          className=\"ml-2\"\n          value={experience}\n          onChange={e => setexperience(e.target.value)}\n        />\n      </div>\n      <button\n        onClick={() => {\n          const tempData = [\n            ...tableData,\n            {\n              categoryNo,\n              applicationFor,\n              isScps,\n              isSara,\n              dcpu,\n              jjb,\n              ch,\n              name,\n              gender,\n              dob,\n              age,\n              father,\n              residence,\n              phone,\n              mobile,\n              email,\n              address,\n              experience\n            }\n          ];\n          localStorage.setItem(\"tableData\", JSON.stringify(tempData));\n          setTableData(tempData);\n        }}\n      >\n        Save\n      </button>\n      <Table columns={tableColumns} data={tableData} />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/index\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
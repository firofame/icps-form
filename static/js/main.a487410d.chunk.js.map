{"version":3,"sources":["App/components/Table/index.js","App/components/EditableCell/index.js","App/constants/tables.js","App/components/TextInput/index.js","App/components/SelectBox/index.js","App/components/CheckBox/index.js","serviceWorker.js","index.js","App/index.js","App/utils/getAge.js"],"names":["Table","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","className","render","row","i","getRowProps","cells","cell","getCellProps","EditableCell","cellInfo","qualificationsData","setqualificationsData","id","initialValue","value","useState","setValue","onChange","e","target","onBlur","item","index","finalTableColumns","setTableData","accessor","Cell","onClick","newArray","filter","localStorage","setItem","JSON","stringify","Header","qualificationsTableColumns","TextInput","longInput","label","toUpperCase","remainingProps","for","type","finalValue","SelectBox","CheckBox","checked","class","Boolean","window","location","hostname","match","ReactDOM","parse","getItem","tableData","categoryNo","setCategoryNo","applicationFor","setApplicationFor","isScps","setIsScps","isSara","setIsSara","dcpu","setDcpu","jjb","setJjb","ch","setCh","name","setName","gender","setGender","dob","setDob","age","setAge","father","setFather","residence","setResidence","phone","setPhone","mobile","setMobile","email","setEmail","address","setAddress","experience","setexperience","course","institution","regNo","yearOfPass","marks","remarks","max","dateString","today","Date","birthDate","getFullYear","m","getMonth","getDate","getAge","tempData","json2csvParser","Parser","newData","newItems","forEach","element","Object","assign","keys","key","csv","fileName","Blob","csvURL","URL","createObjectURL","tempLink","document","createElement","href","setAttribute","click","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a487410d.chunk.js","sourcesContent":["import React from \"react\";\nimport { useTable } from \"react-table\";\n\nexport default function Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  // Render the UI for your table\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()} className=\"border p-1\">\n                {column.render(\"Header\")}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return (\n                  <td {...cell.getCellProps()} className=\"border p-1\">\n                    {cell.render(\"Cell\")}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function EditableCell({\n  cellInfo,\n  qualificationsData,\n  setqualificationsData\n}) {\n  const {\n    row,\n    column: { id },\n    cell: { value: initialValue }\n  } = cellInfo;\n  const [value, setValue] = useState(initialValue);\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n  const onBlur = () => {\n    setqualificationsData(\n      qualificationsData.map((item, index) => {\n        if (row.index === index) {\n          return { ...item, [id]: value };\n        }\n        return item;\n      })\n    );\n  };\n  return <input value={value} onChange={onChange} onBlur={onBlur} />;\n}\n","import React from \"react\";\n\nimport EditableCell from \"../components/EditableCell\";\nimport Table from \"../components/Table\";\n\nexport const finalTableColumns = setTableData => [\n  {\n    accessor: \"delete\",\n    Cell: ({ data, row: { index } }) => {\n      return (\n        <button\n          onClick={() => {\n            const newArray = data.filter((item, i) => {\n              return i !== index;\n            });\n            setTableData(newArray);\n            localStorage.setItem(\"tableData\", JSON.stringify(newArray));\n          }}\n          className=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      );\n    }\n  },\n  { Header: \"Category No\", accessor: \"categoryNo\" },\n  { Header: \"Application for\", accessor: \"applicationFor\" },\n  { Header: \"SCPS\", accessor: \"isScps\" },\n  { Header: \"SARA\", accessor: \"isSara\" },\n  { Header: \"DCPU\", accessor: \"dcpu\" },\n  { Header: \"JJ B/CWC\", accessor: \"jjb\" },\n  { Header: \"CH/OH/POS\", accessor: \"ch\" },\n  { Header: \"Name\", accessor: \"name\" },\n  { Header: \"Gender\", accessor: \"gender\" },\n  { Header: \"D.O.B\", accessor: \"dob\" },\n  { Header: \"Age\", accessor: \"age\" },\n  { Header: \"Father's Name\", accessor: \"father\" },\n  { Header: \"Residence\", accessor: \"residence\" },\n  { Header: \"Phone\", accessor: \"phone\" },\n  { Header: \"Mobile\", accessor: \"mobile\" },\n  { Header: \"Email\", accessor: \"email\" },\n  { Header: \"Address\", accessor: \"address\" },\n  {\n    Header: \"Qualifications Table\",\n    accessor: \"qualificationsData\",\n    Cell: ({ cell: { value } }) => {\n      if (value) {\n        return (\n          <Table\n            columns={[\n              { Header: \"Course\", accessor: \"course\" },\n              { Header: \"Institution/University\", accessor: \"institution\" },\n              { Header: \"Reg.No\", accessor: \"regNo\" },\n              { Header: \"Year Of Pass\", accessor: \"yearOfPass\" },\n              { Header: \"% of Mark/Grade\", accessor: \"marks\" },\n              { Header: \"Remarks\", accessor: \"remarks\" }\n            ]}\n            data={value}\n          />\n        );\n      }\n      return null;\n    }\n  },\n  { Header: \"Experience\", accessor: \"experience\" }\n];\n\nexport const qualificationsTableColumns = (\n  qualificationsData,\n  setqualificationsData\n) => [\n  {\n    Header: \"Course\",\n    accessor: \"course\",\n    Cell: cellInfo => (\n      <EditableCell\n        cellInfo={cellInfo}\n        qualificationsData={qualificationsData}\n        setqualificationsData={setqualificationsData}\n      />\n    )\n  },\n  {\n    Header: \"Institution/University\",\n    accessor: \"institution\",\n    Cell: cellInfo => (\n      <EditableCell\n        cellInfo={cellInfo}\n        qualificationsData={qualificationsData}\n        setqualificationsData={setqualificationsData}\n      />\n    )\n  },\n  {\n    Header: \"Reg.No\",\n    accessor: \"regNo\",\n    Cell: cellInfo => (\n      <EditableCell\n        cellInfo={cellInfo}\n        qualificationsData={qualificationsData}\n        setqualificationsData={setqualificationsData}\n      />\n    )\n  },\n  {\n    Header: \"Year Of Pass\",\n    accessor: \"yearOfPass\",\n    Cell: cellInfo => (\n      <EditableCell\n        cellInfo={cellInfo}\n        qualificationsData={qualificationsData}\n        setqualificationsData={setqualificationsData}\n      />\n    )\n  },\n  {\n    Header: \"% of Mark/Grade\",\n    accessor: \"marks\",\n    Cell: cellInfo => (\n      <EditableCell\n        cellInfo={cellInfo}\n        qualificationsData={qualificationsData}\n        setqualificationsData={setqualificationsData}\n      />\n    )\n  },\n  {\n    Header: \"Remarks\",\n    accessor: \"remarks\",\n    Cell: cellInfo => (\n      <EditableCell\n        cellInfo={cellInfo}\n        qualificationsData={qualificationsData}\n        setqualificationsData={setqualificationsData}\n      />\n    )\n  }\n];\n","import React from \"react\";\n\nexport default function TextInput({\n  longInput,\n  label,\n  onChange,\n  toUpperCase,\n  ...remainingProps\n}) {\n  return (\n    <div className=\"form-group\">\n      <label for={label}>{`${label}: `}</label>\n      <input\n        id={label}\n        type=\"text\"\n        className=\"form-control\"\n        onChange={({ target: { value } }) => {\n          let finalValue = value;\n          if (toUpperCase) {\n            finalValue = finalValue.toUpperCase();\n          }\n          onChange(finalValue);\n        }}\n        {...remainingProps}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function SelectBox({ label, value, onChange }) {\n  return (\n    <div className=\"form-group\">\n      <label for={label}>{label}</label>\n      <select\n        id={label}\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        className=\"custom-select\"\n      >\n        <option value=\"\">Select District</option>\n        <option value=\"Alappuzha\">Alappuzha</option>\n        <option value=\"Ernakulam\">Ernakulam</option>\n        <option value=\"Idukki\">Idukki</option>\n        <option value=\"Kannur\">Kannur</option>\n        <option value=\"Kasaragod\">Kasaragod</option>\n        <option value=\"Kollam\">Kollam</option>\n        <option value=\"Kottayam\">Kottayam</option>\n        <option value=\"Kozhikode\">Kozhikode</option>\n        <option value=\"Malappuram\">Malappuram</option>\n        <option value=\"Palakkad\">Palakkad</option>\n        <option value=\"Pathanamthitta\">Pathanamthitta</option>\n        <option value=\"Thiruvananthapuram\">Thiruvananthapuram</option>\n        <option value=\"Thrissur\">Thrissur</option>\n        <option value=\"Wayanad\">Wayanad</option>\n      </select>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function CheckBox({ label, checked, onChange }) {\n  return (\n    <div className=\"form-check form-group\">\n      <input\n        id={label}\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        checked={checked}\n        onChange={e => onChange(e.target.checked)}\n      />\n      <label className=\"form-check-label\" for={label}>\n        {label}\n      </label>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/index\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from \"react\";\nimport { Parser } from \"json2csv\";\n\nimport Table from \"./components/Table\";\nimport getAge from \"./utils/getAge\";\nimport {\n  finalTableColumns,\n  qualificationsTableColumns\n} from \"./constants/tables\";\nimport TextInput from \"./components/TextInput\";\nimport SelectBox from \"./components/SelectBox\";\nimport CheckBox from \"./components/CheckBox\";\n\nexport default function App() {\n  const [tableData, setTableData] = useState(\n    JSON.parse(localStorage.getItem(\"tableData\"))\n      ? JSON.parse(localStorage.getItem(\"tableData\"))\n      : []\n  );\n  const [categoryNo, setCategoryNo] = useState(\"\");\n  const [applicationFor, setApplicationFor] = useState(\"\");\n  const [isScps, setIsScps] = useState(false);\n  const [isSara, setIsSara] = useState(false);\n  const [dcpu, setDcpu] = useState(\"\");\n  const [jjb, setJjb] = useState(\"\");\n  const [ch, setCh] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [father, setFather] = useState(\"\");\n  const [residence, setResidence] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [experience, setexperience] = useState(\"\");\n  const [qualificationsData, setqualificationsData] = useState([\n    {\n      course: \"S.S.L.C\",\n      institution: \"\",\n      regNo: \"\",\n      yearOfPass: \"\",\n      marks: \"\",\n      remarks: \"\"\n    },\n    {\n      course: \"Pre-Degree/+2\",\n      institution: \"\",\n      regNo: \"\",\n      yearOfPass: \"\",\n      marks: \"\",\n      remarks: \"\"\n    }\n  ]);\n\n  return (\n    <div className=\"bg-light\">\n      <div className=\"container p-3\">\n        <h3>\n          Women And Child Development Department Integrated Child Protection\n          Scheme [ICPS]\n        </h3>\n        <TextInput\n          label={`Category No`}\n          value={categoryNo}\n          onChange={setCategoryNo}\n        />\n        <TextInput\n          longInput\n          label={`Application for the Post of`}\n          value={applicationFor}\n          onChange={setApplicationFor}\n        />\n        <CheckBox label=\"SCPS\" checked={isScps} onChange={setIsScps} />\n        <CheckBox label=\"SARA\" checked={isSara} onChange={setIsSara} />\n        <SelectBox\n          label=\"DCPU (Specify Dist)\"\n          value={dcpu}\n          onChange={setDcpu}\n        />\n        <SelectBox\n          label=\"JJ B/CWC (Specify Dist)\"\n          value={jjb}\n          onChange={setJjb}\n        />\n        <SelectBox\n          label=\"CH/OH/POS (Specify Dist)\"\n          value={ch}\n          onChange={setCh}\n        />\n        <TextInput\n          longInput\n          toUpperCase\n          label={`1. Name (Use Capital Letters Only)`}\n          value={name}\n          onChange={setName}\n        />\n        <div className=\"form-group\">\n          <label for=\"gender\">2. Male/Female/TG (Specify):</label>\n          <select\n            id=\"gender\"\n            className=\"custom-select\"\n            value={gender}\n            onChange={e => setGender(e.target.value)}\n          >\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            <option value=\"TG\">TG</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label for=\"age\">3. Age & Date of Birth:</label>\n          <input\n            id=\"age\"\n            type=\"date\"\n            max=\"2019-10-01\"\n            className=\"form-control\"\n            value={dob}\n            onChange={e => {\n              setDob(e.target.value);\n              setAge(getAge(e.target.value));\n            }}\n          />\n          <label for=\"age\">{`Age: ${age}`}</label>\n        </div>\n        <TextInput\n          longInput\n          toUpperCase\n          label={`4. Father's/Husband's Name`}\n          value={father}\n          onChange={setFather}\n        />\n        <div className=\"form-group\">\n          <label for=\"residence\">\n            5. Place of Residence (Proof to be attached):\n          </label>\n          <textarea\n            id=\"residence\"\n            rows=\"3\"\n            className=\"form-control\"\n            value={residence}\n            onChange={e => setResidence(e.target.value)}\n          />\n        </div>\n        <TextInput\n          type=\"tel\"\n          label={`6.a Phone / Mobile No`}\n          value={phone}\n          onChange={setPhone}\n        />\n        <TextInput\n          type=\"tel\"\n          label={`6.b Phone / Mobile No`}\n          value={mobile}\n          onChange={setMobile}\n        />\n        <TextInput\n          longInput\n          type=\"email\"\n          label={`7. e-mail Address`}\n          value={email}\n          onChange={setEmail}\n        />\n        <div className=\"form-group\">\n          <label for=\"address\">8. Permanent Address (With Pin code):</label>\n          <textarea\n            id=\"address\"\n            rows=\"3\"\n            className=\"form-control\"\n            value={address}\n            onChange={e => setAddress(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label for=\"qualification\">\n            9. Qualification (Use Additional Sheets if needed):\n          </label>\n          <Table\n            id=\"qualification\"\n            columns={qualificationsTableColumns(\n              qualificationsData,\n              setqualificationsData\n            )}\n            data={qualificationsData}\n          />\n          <button\n            onClick={() => {\n              setqualificationsData([\n                ...qualificationsData,\n                {\n                  course: \"\",\n                  institution: \"\",\n                  regNo: \"\",\n                  yearOfPass: \"\",\n                  marks: \"\",\n                  remarks: \"\"\n                }\n              ]);\n            }}\n            className=\"btn btn-secondary\"\n          >\n            + Add\n          </button>\n        </div>\n        <TextInput\n          longInput\n          label={`10. Experience`}\n          value={experience}\n          onChange={setexperience}\n        />\n        <button\n          className=\"w-100 btn btn-primary\"\n          onClick={() => {\n            const tempData = [\n              ...tableData,\n              {\n                categoryNo,\n                applicationFor,\n                isScps,\n                isSara,\n                dcpu,\n                jjb,\n                ch,\n                name,\n                gender,\n                dob,\n                age,\n                father,\n                residence,\n                phone,\n                mobile,\n                email,\n                address,\n                qualificationsData,\n                experience\n              }\n            ];\n            localStorage.setItem(\"tableData\", JSON.stringify(tempData));\n            setTableData(tempData);\n            setCategoryNo(\"\");\n            setApplicationFor(\"\");\n            setIsScps(false);\n            setIsSara(false);\n            setDcpu(\"\");\n            setJjb(\"\");\n            setCh(\"\");\n            setName(\"\");\n            setGender(\"Male\");\n            setDob(\"\");\n            setAge(0);\n            setFather(\"\");\n            setResidence(\"\");\n            setPhone(\"\");\n            setMobile(\"\");\n            setEmail(\"\");\n            setAddress(\"\");\n            setexperience(\"\");\n            setqualificationsData([\n              {\n                course: \"S.S.L.C\",\n                institution: \"\",\n                regNo: \"\",\n                yearOfPass: \"\",\n                marks: \"\",\n                remarks: \"\"\n              },\n              {\n                course: \"Pre-Degree/+2\",\n                institution: \"\",\n                regNo: \"\",\n                yearOfPass: \"\",\n                marks: \"\",\n                remarks: \"\"\n              }\n            ]);\n          }}\n        >\n          Save\n        </button>\n      </div>\n\n      <div className=\"container py-5\">\n        <button\n          className=\"btn btn-info\"\n          onClick={() => {\n            const json2csvParser = new Parser();\n            const newData = tableData.map(\n              ({ qualificationsData, ...items }) => {\n                let newItems = { ...items };\n                qualificationsData.forEach((element, index) => {\n                  newItems = {\n                    ...newItems,\n                    ...Object.assign(\n                      {},\n                      ...Object.keys(element).map(key => ({\n                        [`${key} ${index + 1}`]: element[key]\n                      }))\n                    )\n                  };\n                });\n                return newItems;\n              }\n            );\n            const csv = json2csvParser.parse(newData);\n            const fileName = new Date() + \".csv\";\n            var data = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n            var csvURL = window.URL.createObjectURL(data);\n            let tempLink = document.createElement(\"a\");\n            tempLink.href = csvURL;\n            tempLink.setAttribute(\"download\", fileName);\n            tempLink.click();\n          }}\n        >\n          Download\n        </button>\n        <Table columns={finalTableColumns(setTableData)} data={tableData} />\n      </div>\n    </div>\n  );\n}\n","export default function getAge(dateString) {\n  var today = new Date(2019, 9, 1);\n  var birthDate = new Date(dateString);\n  var age = today.getFullYear() - birthDate.getFullYear();\n  var m = today.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n}\n"],"sourceRoot":""}